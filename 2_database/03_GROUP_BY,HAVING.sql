/*
    <GROUP BY절>
    그룹기준을 제시할 수 있는 구문(해당 그룹기준별로 여러 그룹으로 묶을 수 있음)
    여러개의 값들을 하나의 그룹으로 묶어서 처리하는 목적으로 사용
*/

SELECT SUM(SALARY)
FROM EMPLOYEE; -- 전체사원을 하나의 그룹으로 묶어서 총 합을 구한 결과

-- 각 부서별 총 급여
-- 각 부서들이 전부 그룹
SELECT DEPT_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY DEPT_CODE;

-- 각 부서별 사월 수
SELECT DEPT_CODE, COUNT(*)
FROM EMPLOYEE
GROUP BY DEPT_CODE;

SELECT DEPT_CODE, COUNT(*), SUM(SALARY) ------- 3
FROM EMPLOYEE ------- 1
GROUP BY DEPT_CODE ------- 2
ORDER BY DEPT_CODE; ------- 4

-- 각 직급별 총사원수, 보너스를 받는 사원 수, 급여합, 평균급여, 최저급여, 최고급여 (정렬 : 직급 오름차순)
SELECT 
    JOB_CODE, 
    COUNT(*) AS "사원수",
    COUNT(BONUS) AS "보너스", 
    SUM(SALARY) AS "급여", 
    ROUND(AVG(SALARY)) AS "급여평균", 
    MIN(SALARY) AS "최저급여", 
    MAX(SALARY) AS "최고급여"
FROM EMPLOYEE
GROUP BY JOB_CODE
ORDER BY JOB_CODE;

-- GROUP BY 절에 함수식 사용 가능
SELECT DECODE(SUBSTR(EMP_NO, 8, 1),
    '1', '남',
    '2', '여'), COUNT(*)
FROM EMPLOYEE
GROUP BY SUBSTR(EMP_NO, 8, 1);

-- GROUP BY 절에 여러 컬럼 기술
SELECT DEPT_CODE, JOB_CODE, COUNT(*), SUM(SALARY)
FROM EMPLOYEE
GROUP BY DEPT_CODE, JOB_CODE
ORDER BY DEPT_CODE ASC, JOB_CODE ASC;

---------------------------------------------------------------------------------------
/*
    [HAVING 절]
    그룹에 대한 조건을 제시할 때 사용되는 구문(주로 그룹함수식을 가지고 조건을 만듬)
*/
-- 각 부서별 평균 급여 조회(부서코드, 평균급여)
SELECT DEPT_CODE, ROUND(AVG(SALARY))
FROM EMPLOYEE
GROUP BY DEPT_CODE;

-- 각 부서별 평균 급여가 300만원 이상인 부서들만 조회(부서코드 평균급여)
SELECT DEPT_CODE, ROUND(AVG(SALARY))
FROM EMPLOYEE
GROUP BY DEPT_CODE
-- WHERE AVG(SALARY) >= 3000000;
HAVING AVG(SALARY) >= 3000000;

--===========================================================================
--직급별 직급코드, 총 급여합(단, 직급별 급여합이 1000만원 이상인 직급만 조회)
SELECT JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY JOB_CODE
HAVING SUM(SALARY) >= 10000000;

--부서별 보너스를 받는 사원이 없는 부서의 코드
SELECT DEPT_CODE
FROM EMPLOYEE
GROUP BY DEPT_CODE
HAVING COUNT(BONUS) = 0;

-----------------------------------------------------------------------------
/*
    SELECT * | 조회하고싶은 컬럼 AS 별칭 | 함수식 | 산술연산식                ------- 5
    FROM 조회하고자하는 테이블 | DUAL                                     ------- 1
    WHERE 조건식 (연산자들을 활용하여 기술)                                 ------- 2
    GROUP BY 그룹기준이 되는 컬럼 | 함수식                                 ------- 3
    HAVING 조건식(그룹함수를 가지고 기술)                                  ------- 4
    ORDER BY 컬럼 | 별칭 | 순서 [ASC | DESC] [NULLS FIST | NULLS LAST]  ------- 6
*/